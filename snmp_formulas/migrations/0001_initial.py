# Generated by Django 5.2.5 on 2025-10-13 15:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndexFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(blank=True, help_text='Modelo específico de OLT (opcional). Dejar vacío si aplica a toda la marca.', max_length=100, null=True, verbose_name='Modelo OLT')),
                ('nombre', models.CharField(help_text='Ej: "Huawei MA5800 - Fórmula estándar"', max_length=255, verbose_name='Nombre descriptivo')),
                ('activo', models.BooleanField(default=True, help_text='Si está desactivado, no se usará esta fórmula', verbose_name='Activo')),
                ('calculation_mode', models.CharField(choices=[('linear', 'Lineal (Base + Pasos)'), ('bitshift', 'Desplazamiento de Bits')], default='linear', help_text='Cómo se calcula el slot/port desde el índice', max_length=20, verbose_name='Modo de cálculo')),
                ('base_index', models.BigIntegerField(default=0, help_text='Valor base que se resta del índice SNMP. Ej: 4194304000 para Huawei', verbose_name='Base del índice')),
                ('step_slot', models.IntegerField(default=0, help_text='Incremento del índice por cada slot. Ej: 8192 para Huawei', verbose_name='Paso por slot')),
                ('step_port', models.IntegerField(default=0, help_text='Incremento del índice por cada puerto. Ej: 256 para Huawei', verbose_name='Paso por puerto')),
                ('shift_slot_bits', models.IntegerField(default=0, help_text='Cuántos bits desplazar para extraer slot (modo bitshift)', verbose_name='Bits de desplazamiento para slot')),
                ('shift_port_bits', models.IntegerField(default=0, help_text='Cuántos bits desplazar para extraer puerto (modo bitshift)', verbose_name='Bits de desplazamiento para puerto')),
                ('mask_slot', models.CharField(blank=True, help_text='Máscara hexadecimal para slot (ej: 0xFF). Opcional.', max_length=20, null=True, verbose_name='Máscara para slot')),
                ('mask_port', models.CharField(blank=True, help_text='Máscara hexadecimal para puerto (ej: 0xFF). Opcional.', max_length=20, null=True, verbose_name='Máscara para puerto')),
                ('onu_offset', models.IntegerField(default=0, help_text='Si la numeración de ONU empieza en 0 o 1 (o cualquier otro número)', verbose_name='Offset de ONU')),
                ('has_dot_notation', models.BooleanField(default=False, help_text='Si el índice incluye ".ONU" al final (ej: "4194312448.2")', verbose_name='Usa notación con punto')),
                ('dot_is_onu_number', models.BooleanField(default=True, help_text='Si la parte después del punto es el número de ONU lógico', verbose_name='Punto es número ONU')),
                ('slot_max', models.IntegerField(default=64, help_text='Rango máximo esperado de slots (para validación)', verbose_name='Slot máximo')),
                ('port_max', models.IntegerField(default=64, help_text='Rango máximo esperado de puertos (para validación)', verbose_name='Puerto máximo')),
                ('onu_max', models.IntegerField(default=128, help_text='Rango máximo esperado de ONUs por puerto (para validación)', verbose_name='ONU máximo')),
                ('normalized_format', models.CharField(default='{slot}/{port}', help_text='Formato de salida. Variables: {slot}, {port}, {logical}. Ej: "{slot}/{port}" o "{slot}/{port}/{logical}"', max_length=50, verbose_name='Formato normalizado')),
                ('descripcion', models.TextField(blank=True, help_text='Notas adicionales sobre esta fórmula', null=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado')),
                ('marca', models.ForeignKey(db_column='marca_id', help_text='Marca del equipo (Huawei, ZTE, etc.)', on_delete=django.db.models.deletion.CASCADE, to='brands.brand', verbose_name='Marca')),
            ],
            options={
                'verbose_name': 'Fórmula de Índice SNMP',
                'verbose_name_plural': 'Fórmulas de Índice SNMP',
                'db_table': 'index_formulas',
                'ordering': ['marca__nombre', 'modelo'],
                'indexes': [models.Index(fields=['marca', 'activo'], name='index_formu_marca_i_ab92d0_idx'), models.Index(fields=['activo'], name='index_formu_activo_f4d8e1_idx')],
                'unique_together': {('marca', 'modelo')},
            },
        ),
    ]
