#!/usr/bin/env python
"""
Script para probar las acciones de duplicaci√≥n de f√≥rmulas
Ejecutar: python probar_acciones_formulas.py
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from snmp_formulas.models import IndexFormula
from olt_models.models import OLTModel
from brands.models import Brand

def mostrar_formulas_actuales():
    """Muestra todas las f√≥rmulas actuales"""
    print("\n" + "="*60)
    print("üìã F√ìRMULAS ACTUALES")
    print("="*60)
    
    formulas = IndexFormula.objects.all().select_related('marca', 'modelo')
    
    if not formulas.exists():
        print("‚ö†Ô∏è No hay f√≥rmulas configuradas")
        return
    
    for formula in formulas:
        modelo_display = f"üîß {formula.modelo.nombre}" if formula.modelo else "üåê Gen√©rico"
        status = "‚úÖ Activo" if formula.activo else "‚ùå Inactivo"
        
        print(f"\n{status} {formula}")
        print(f"   Marca: {formula.marca.nombre}")
        print(f"   Modelo: {modelo_display}")
        print(f"   Modo: {formula.get_calculation_mode_display()}")


def mostrar_modelos_sin_formula():
    """Muestra modelos que no tienen f√≥rmula espec√≠fica"""
    print("\n" + "="*60)
    print("üîç MODELOS SIN F√ìRMULA ESPEC√çFICA")
    print("="*60)
    
    # Obtener todas las f√≥rmulas espec√≠ficas (con modelo)
    formulas_especificas = IndexFormula.objects.filter(
        modelo__isnull=False
    ).values_list('modelo_id', flat=True)
    
    # Modelos sin f√≥rmula espec√≠fica
    modelos_sin_formula = OLTModel.objects.filter(
        activo=True
    ).exclude(
        id__in=formulas_especificas
    ).select_related('marca')
    
    if not modelos_sin_formula.exists():
        print("‚úÖ Todos los modelos tienen f√≥rmulas espec√≠ficas")
        return
    
    print(f"üìä Encontrados {modelos_sin_formula.count()} modelos sin f√≥rmula espec√≠fica:")
    
    for modelo in modelos_sin_formula:
        print(f"   ‚Ä¢ {modelo.marca.nombre} - {modelo.nombre}")


def simular_duplicacion_para_modelos():
    """Simula la duplicaci√≥n para modelos espec√≠ficos"""
    print("\n" + "="*60)
    print("üß™ SIMULACI√ìN: DUPLICAR PARA MODELOS ESPEC√çFICOS")
    print("="*60)
    
    # Buscar f√≥rmula gen√©rica de Huawei
    try:
        huawei = Brand.objects.get(nombre__iexact='huawei')
        formula_generica = IndexFormula.objects.get(
            marca=huawei,
            modelo__isnull=True
        )
        
        print(f"‚úÖ F√≥rmula gen√©rica encontrada: {formula_generica}")
        
        # Obtener modelos Huawei sin f√≥rmula espec√≠fica
        modelos_sin_formula = OLTModel.objects.filter(
            marca=huawei,
            activo=True
        ).exclude(
            id__in=IndexFormula.objects.filter(
                marca=huawei,
                modelo__isnull=False
            ).values_list('modelo_id', flat=True)
        )
        
        if modelos_sin_formula.exists():
            print(f"\nüìã Modelos que recibir√≠an f√≥rmulas espec√≠ficas:")
            for modelo in modelos_sin_formula:
                print(f"   ‚Ä¢ {modelo.nombre} ‚Üí {formula_generica.marca.nombre} {modelo.nombre} - F√≥rmula espec√≠fica")
            
            print(f"\nüí° Acci√≥n recomendada:")
            print(f"   1. Ir a: http://127.0.0.1:8000/admin/snmp_formulas/indexformula/")
            print(f"   2. Seleccionar: '{formula_generica.nombre}'")
            print(f"   3. Acci√≥n: 'üéØ Duplicar para modelos espec√≠ficos'")
            print(f"   4. Ejecutar")
            print(f"   5. Se crear√°n {modelos_sin_formula.count()} f√≥rmulas espec√≠ficas")
        else:
            print("‚úÖ Todos los modelos Huawei ya tienen f√≥rmulas espec√≠ficas")
            
    except Brand.DoesNotExist:
        print("‚ùå Marca Huawei no encontrada")
    except IndexFormula.DoesNotExist:
        print("‚ùå F√≥rmula gen√©rica de Huawei no encontrada")


def mostrar_instrucciones_uso():
    """Muestra instrucciones de uso de las acciones"""
    print("\n" + "="*60)
    print("üìñ INSTRUCCIONES DE USO")
    print("="*60)
    print("""
üéØ C√ìMO USAR LAS ACCIONES:

1. üìã DUPLICAR F√ìRMULA SELECCIONADA:
   - Selecciona UNA f√≥rmula
   - Acci√≥n: "üìã Duplicar f√≥rmula seleccionada"
   - Crea una copia exacta (inactiva por defecto)
   - √ötil para hacer modificaciones sin perder la original

2. üéØ DUPLICAR PARA MODELOS ESPEC√çFICOS:
   - Selecciona UNA f√≥rmula GEN√âRICA (sin modelo)
   - Acci√≥n: "üéØ Duplicar para modelos espec√≠ficos"
   - Crea f√≥rmulas espec√≠ficas para todos los modelos de la marca
   - √ötil para tener f√≥rmulas por modelo espec√≠fico

üîç EJEMPLO PR√ÅCTICO:

Para crear f√≥rmulas espec√≠ficas de Huawei:
1. Ir a: http://127.0.0.1:8000/admin/snmp_formulas/indexformula/
2. Seleccionar: "Huawei - F√≥rmula Est√°ndar" (gen√©rica)
3. Acci√≥n: "üéØ Duplicar para modelos espec√≠ficos"
4. Ejecutar
5. Resultado: Se crean f√≥rmulas para MA5800, MA5608T, AN5516-06

‚úÖ VENTAJAS:
   - F√≥rmulas espec√≠ficas por modelo
   - Prioridad autom√°tica: espec√≠fica ‚Üí gen√©rica
   - F√°cil personalizaci√≥n por modelo
   - Mantiene compatibilidad con gen√©ricas
    """)


if __name__ == "__main__":
    # Ejecutar todas las verificaciones
    mostrar_formulas_actuales()
    mostrar_modelos_sin_formula()
    simular_duplicacion_para_modelos()
    mostrar_instrucciones_uso()
    
    print("\n" + "="*60)
    print("‚úÖ VERIFICACI√ìN COMPLETA")
    print("="*60)
    print("\nüí° Pr√≥ximos pasos:")
    print("   1. Ir al admin de f√≥rmulas SNMP")
    print("   2. Probar las acciones de duplicaci√≥n")
    print("   3. Crear f√≥rmulas espec√≠ficas por modelo")
    print("   4. Asignar modelos a OLTs")
    print()
