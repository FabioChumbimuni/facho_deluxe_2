# Generated by Django 5.2.5 on 2025-10-13 15:25

from django.db import migrations


def create_sample_models(apps, schema_editor):
    """
    Crea modelos de ejemplo para las marcas más comunes.
    """
    OLTModel = apps.get_model('olt_models', 'OLTModel')
    Brand = apps.get_model('brands', 'Brand')
    
    # Obtener marcas existentes
    try:
        huawei = Brand.objects.get(nombre__iexact='huawei')
    except Brand.DoesNotExist:
        print("⚠️ Marca Huawei no encontrada. Saltando creación de modelos.")
        return
    
    # Modelos Huawei
    huawei_models = [
        {
            'nombre': 'MA5800',
            'descripcion': 'OLT GPON de alta densidad para acceso fijo',
            'tipo_olt': 'GPON',
            'capacidad_puertos': 16,
            'capacidad_onus': 128,
            'slots_disponibles': 16,
            'comunidad_snmp_default': 'public',
            'url_documentacion': 'https://support.huawei.com/enterprise/es/doc/EDOC1100033071',
        },
        {
            'nombre': 'MA5608T',
            'descripcion': 'OLT GPON compacto para redes de acceso',
            'tipo_olt': 'GPON',
            'capacidad_puertos': 8,
            'capacidad_onus': 128,
            'slots_disponibles': 8,
            'comunidad_snmp_default': 'public',
        },
        {
            'nombre': 'AN5516-06',
            'descripcion': 'OLT GPON de Huawei para redes de acceso',
            'tipo_olt': 'GPON',
            'capacidad_puertos': 6,
            'capacidad_onus': 64,
            'slots_disponibles': 6,
            'comunidad_snmp_default': 'public',
        },
    ]
    
    # Crear modelos Huawei
    for model_data in huawei_models:
        OLTModel.objects.get_or_create(
            nombre=model_data['nombre'],
            marca=huawei,
            defaults=model_data
        )
    
    print(f"✅ Creados {len(huawei_models)} modelos Huawei")
    
    # Buscar otras marcas y crear modelos de ejemplo
    try:
        zte = Brand.objects.get(nombre__iexact='zte')
        
        zte_models = [
            {
                'nombre': 'C320',
                'descripcion': 'OLT GPON de ZTE para redes de acceso',
                'tipo_olt': 'GPON',
                'capacidad_puertos': 8,
                'capacidad_onus': 128,
                'slots_disponibles': 8,
                'comunidad_snmp_default': 'public',
            },
            {
                'nombre': 'C300',
                'descripcion': 'OLT GPON compacto de ZTE',
                'tipo_olt': 'GPON',
                'capacidad_puertos': 4,
                'capacidad_onus': 64,
                'slots_disponibles': 4,
                'comunidad_snmp_default': 'public',
            },
        ]
        
        for model_data in zte_models:
            OLTModel.objects.get_or_create(
                nombre=model_data['nombre'],
                marca=zte,
                defaults=model_data
            )
        
        print(f"✅ Creados {len(zte_models)} modelos ZTE")
        
    except Brand.DoesNotExist:
        print("⚠️ Marca ZTE no encontrada. Saltando modelos ZTE.")


def reverse_sample_models(apps, schema_editor):
    """Elimina los modelos de ejemplo"""
    OLTModel = apps.get_model('olt_models', 'OLTModel')
    
    # Eliminar modelos de ejemplo
    sample_names = ['MA5800', 'MA5608T', 'AN5516-06', 'C320', 'C300']
    OLTModel.objects.filter(nombre__in=sample_names).delete()
    
    print("✅ Modelos de ejemplo eliminados")


class Migration(migrations.Migration):

    dependencies = [
        ('olt_models', '0001_initial'),
        ('brands', '__first__'),  # Asegurar que brands existe
    ]

    operations = [
        migrations.RunPython(create_sample_models, reverse_sample_models),
    ]
